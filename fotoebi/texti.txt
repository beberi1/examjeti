1.	შექმენი ტერმინალიდან დირექტორია exam_btu_გვარი. შექმენი ცხრილ სივრცე გვარი_tablesp ორი დატა ფაილებთან გვარი_data1.dbf და გვარი_data2.dbf ერთად ლოკაცია იყოს exam_btu_გვარი დირექტორია ზომები 20 და 30 მეგაბაიტი.
სკრიპტი:
create tablespace chakhvadze_tablesp 
DATAFILE '/home/oracle/exam_btu_chakhvadze/chakhvadze_data1.dbf' size 20m,
'/home/oracle/exam_btu_chakhvadze/chakhvadze_data2.dbf' size 30m ;

2.	შექმენი მომხმარებელი სახელით შენი სახელი პაროლი შენი გვარი დეფაულტ ცხრილსივრცე გვარი_tablesp. მიანიჭე როლური პრივილეგია dba. მიანიჭე სისტემური პრივილეგიები ცხრილის შექმნა, სინონიმის შექმნა, ხედის და მიმდევრობის შექმნა. მიეცით hr.employees ცხრილზე მოსელექტების და დააპდეითების ობიექტ პრივილეგია.
სკრიპტი:
create user aleksandre IDENTIFIED by chakhvadze 
default TABLESPACE chakhvadze_tablesp QUOTA UNLIMITED on chakhvadze_tablesp;
grant dba to aleksandre;
grant create table, create synonym , create view, create sequence to aleksandre;
grant select, update on hr.employees to aleksandre;

3.	მიქონექთი შენი სახელის უზერით. ქონექშენის სახელი იყოს შენი სახელი_გვარი.
შექმენი ცხრილი exam რომელსაც ექნება 2 სვეტი exam_id რიცხვითი 4 თანრიგიანი პირველადი გასღები და exam_name სტრქიონული 20 სიმბოლო მაქსიმუმ უნიკალური.
შექმენი ცხრილი students რომელსაც ექნება 3 სვეტი id რიცხვითი 4 თანრიგიანი პირველადი გასაღები ავტომატურად ზრდადი, last_name სტრქიონული 20 სიმბოლო მაქსიმუმ არანალიზებული, exam_id რიცხვითი 4 თანრიგიანი მეორადი გასაღები exam ცხრილის exam_id-ით შეზღუდული.
სკრიპტი:
create table exam (exam_id number(4) primary key, exam_name varchar2(20) unique);
create table students (id number(4) GENERATED BY DEFAULT ON NULL AS IDENTITY primary key,
last_name varchar2(20) not null, exam_id number(4) REFERENCES exam(exam_id));
 
4.	შექმენი მიმდევრობა გვარი_seq სტარტით 10 ბიჯი 2 მაქიმალური 400. შექმენი ტრიგერი გვარი_trig exam ცხრილის exam_id პირველადი გასაღები სვეტისათვის.
შეიტანე 2 ჩანაწერი exam ცხრილში:
Excel
Python
შეიტანე 2 ჩანაწერი students ცხრილში:
Donadze, 10
Lebanidze, 12
სკრიპტი:
create sequence chakhvadze_seq start with 10 increment by 2 maxvalue 400;
create or replace trigger chakhvadze_trig
before insert on exam
for each row
begin
select chakhvadze_seq.nextval into :new.exam_id from dual;
end;
/
insert into exam(exam_name) values('Excel');
insert into exam(exam_name) values('Python');
insert into students(last_name,exam_id) values('Donadze',10);
insert into students(last_name, exam_id) values('Lebanidze',12);
commit;
 
5.	შექმენი ცხრილი სახელად შენი გვარი_tab, რომელსაც ექნება 1 სვეტი lastname სტრიქონული მაქსიმუმ 30 სიმბოლო. შეიტანე შენი გვარი. მოახდინე ამ ცხრილის ისე წაშლა რომ ჩავარდეს ნაგვის ყუთში. მოახდინე ნაგვის ყუთიდან მისი აღდგენა (აქ წარმოდგენილია სამივე ვარიანტი გამოცდაზე შეგხვდება მხოლოდ ერთ-ერთი)  1. ორიგინალი სახელის მეშვეობით, 2. ობიექტ ნეიმის მესვეობით,  3. რომ სახელი ერქვას examtab_შენი გვარი.
სკრიპტი:
create table chakhvadze_tab (lastname varchar2(30));
insert into chakhvadze_tab values('Chakhvadze');
commit;
drop table chakhvadze_tab;
select * from user_recyclebin;
--1
flashback table chakhvadze_tab to before drop;
--2
flashback table "BIN$/nZUG/iWKOTgUwEAAH8g/g==$0" to before drop;
--3
flashback table "BIN$/nZUG/iXKOTgUwEAAH8g/g==$0" to before drop RENAME to examtab_chakhvadze;
 
6.	შექმენი ცხრილი სახელად შენი გვარი, რომელსაც ექნება 1 სვეტი lastname სტრიქონული მაქსიმუმ 30 სიმბოლო. შეიტანე ჩანაწერები
Burkadze
Gagua
1. დააფიქსირე ამჟამინდელი სისტემური ცვლილების ნომერი (ან აქ ამ სისტემური ცვლილების ნომერის მაგივრად იქნება შექმენი რესპორ პოინტი შენი გვარი_point). 2. შექმენი რესტორ პოინტი შენი გვარი_point.
შეიტანე ჩანაწერი
Kurtanidze
1. გამოიტანე მონაცემები ბაზაში სისტემური ცვლილების ნომრის მდგომარეობით. 2. აღადგინე ბაზაში რესტორ პოინტის მდგომარეობა.
სკრიპტი:
create table chakhvadze (lastname varchar2(30));
insert into chakhvadze values ('Burkadze');
insert into chakhvadze values ('Gagua');
commit;
--1
select current_scn from v$database; --5368508
--2
create RESTORE POINT chakhvadze_point;

insert into chakhvadze values ('kurtanidze');
commit;
--1
select * from chakhvadze as of scn 5368508;
--2
alter table chakhvadze enable row movement;
flashback table chakhvadze to restore point chakhvadze_point;
 
7.	მოასელექტე hr.employees ცხრილი. GUI-გარემოდან მოახდინე ჩანაწერების ექსპორტი csv (dsv დელიმიტატორი იყოს tab, text) ფაილად დექსტოპზე დაარქვი შენი გვარი_exam. მოახდინე csv (dsv, text) შენი გვარი_exam ფაილიდან მონაცემების იმპორტი ბაზაში ცხრილს დაერქვას სახელი t#შენი გვარი.
სკრიპტი: select * from hr.employees;
 
8.	შექმენი ცხრილი t$შენი გვარი hr.employees ცხრილზე დაყრდნობით.  ტერმინალური expdp უტილიტას დახმარებით გამოაექსპორტეთ შენი მომხმარებლით და პასვორდით t$შენი გვარი ცხრილი დირექტორიაში data_dump_dir, დამპ ფაილი სახელი იყოს exp_table_გვარი.dmp, log იყოს exp_გვარი_log.log. ტერმინალური Impdp უტილიტას დახმარებით შეაიმპორტეთ შენი მომხმარებლით და პასვორდით t$შენი გვარი ცხრილი შეცვლილი სახელით გვარი_emp დირექტორიიდან data_dump_dir, დამპ ფაილი სახელი exp_table_გვარი.dmp, log იყოს imp_გვარი_log.log.
სკრიპტი:
expdp aleksandre/chakhvadze tables=t\$chakhvadze directory=data_pump_dir dumpfile=exp_table_chakhvadze.dmp logfile=exp_chakhvadze_log.log
აქ ყურადღება მიაქციეთ t\$chakhvadze-ში \ ნისანს რადგან ტერმინალში დოლარის ნიშანი გამოიყენება ცვლადებთან სამუშაოდ ამიტომ მას უნდა დაეკარგოს პირველადი შინაარსი.
impdp aleksandre/chakhvadze tables=t\$chakhvadze directory=data_pump_dir dumpfile=exp_table_chakhvadze.dmp logfile=imp_chakhvadze_log.log remap_table=t\$chakhvadze:chakhvadze_emp
 
9.	შექმენი ცხრილი sales, რომელსაც ექნება სვეტები sales_id რიცხვითი პირველადი გასაღები, sales_amt რიცხვითი, region_id რიცხვითი და sales_dtt თარიღის ტიპის. შეიტანეთ მასში 1 სქრიქონი და დაარეზერვეთ. სქრიქონები: 1,101,10,sysdate-10; შექმენით დარეფრეშებადი მატერიალიზებული ხედი სახელით sales_daily_mv შექმნილ sales ცხრილზე დაყრდნობით. შეიტანეთ 1 დამატებითი ჩანაწერი sales ცხილში. 4,99,200,sysdate; დაარეფრეშეთ მატერიალიზებული ხედი complete რეჯიმით dbms_mview pl/sql პეკიჯის გამოყენებით. გამოიტანეთ ჩანაწერები მატერიალიზებული ხედიდან;
სკრიპტი:
create table sales(
sales_id number primary key ,sales_amt number ,region_id number ,sales_dtt date );
insert into sales values(1,101,10,sysdate-10);
commit;
create materialized view sales_daily_mv
segment creation immediate refresh
complete on demand as
select sum(sales_amt) sales_amt ,trunc(sales_dtt) sales_dtt
from sales
group by trunc(sales_dtt);
insert into sales values(4,99,200,sysdate);
commit;
exec dbms_mview.refresh('SALES_DAILY_MV','C');
select * from sales_daily_mv;
 
10.	მოახდინეთ მომხმარებლისა და ქონექშენის წაშლა, მომხმარებელი თავისი ყველა ობიექტიანად იქნეს მოცილებული. წაშალე ცხრილ სივრცე გვარი_tablesp. წაშალე დირექტორია exam_btu_გვარი.
სკრიპტი:
drop user aleksandre cascade;
drop TABLESPACE chakhvadze_tablesp INCLUDING CONTENTS and DATAFILES CASCADE CONSTRAINTS;
rm -rf exam_btu_chakhvadze/

 
